{% if 'statsd' in parts['oauth_provider.ini'] -%}
[pipeline:main]
pipeline = request_metrics oauth
{% endif %}

[server:main]
use = egg:gunicorn#main
host = {{ host }}
port = {{ port }}
workers = {{ workers }}
proc_name = oauth provider
worker_class = gunicorn.workers.ggevent.GeventWorker
timeout = 300

{% if 'statsd' in parts['oauth_provider.ini'] %}
[app:oauth]
{% else %}
[app:main]
{% endif %}
use = egg:openprocurement.auth#oauth_provider
redis = {{ redis }}
sentinels = {{ sentinels_list }}
redis_password = {{ redis_password }}
redis_database = {{ redis_database }}
sentinel_cluster_name = {{ sentinel_cluster_name }}
secret = {{ secret }}
hash_secret_key = {{ hash_secret_key }}
timezone = {{ timezone }}
auction_url = {{ auction_url }}
auction_client_id = {{ auction_client_id }}
auction_client_secret = {{ auction_client_secret }}

{% if 'statsd' in parts['auctions.ini'] %}
[filter:request_metrics]
paste.filter_factory = pyramidtiming.tween:factory
{% endif %}

[loggers]
keys = root, openprocurement.auction

[handlers]
keys = console{% if 'statsd' in parts['oauth_provider.ini'] %},statsd {% endif %}

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = console{% if 'statsd' in parts['oauth_provider.ini'] %},statsd {% endif %}

[logger_openprocurement.auction]
level = INFO
handlers =
qualname = openprocurement.auction

{% if 'statsd' in parts['oauth_provider.ini'] %}
[handler_statsd]
level = DEBUG
class = statsdhandler.statsdhandler.StatsdHandler
args = ("{{handler_config}}",)
{% endif %}

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = INFO
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
