{% if 'statsd' in parts['auctions.ini'] -%}
[pipeline:main]
pipeline = request_metrics auctions
{% endif %}

[server:main]
use = egg:gunicorn#main
host = {{host}}
port = {{port}}
workers = {{workers}}
proc_name = auctions_server
worker_class = gunicorn.workers.ggevent.GeventWorker
timeout = 300

{% if 'statsd' in parts['auctions.ini'] %}
[app:auctions]
{% else %}
[app:main]
{% endif %}
use = egg:openprocurement.auction#auctions_server
redis_url = {{redis_url}}
sentinels = {{sentinels_list}}
redis_password = {{redis_password}}
redis_database = {{redis_database}}
sentinel_cluster_name = {{sentinel_cluster_name}}
external_couch_url = {{external_couch_url}}
internal_couch_url = {{internal_couch_url}}
proxy_internal_couch_url = {{proxy_internal_couch_url}}
auctions_db = {{auctions_db}}
timezone = {{timezone}}
hash_secret_key = {{HASH_SECRET_KEY}}
preferred_url_scheme = {{preferred_url_scheme}}
debug = {{debug}}
auto_build = {{auto_build}}
limit_replications_progress = {{limit_replications_progress}}
limit_replications_func  = {{limit_replications_func}}
filter-with = add_request_id

[filter:add_request_id]
paste.filter_factory = request_id_middleware.middleware:RequestIdMiddleware.factory
env_request_id = x_request_id
resp_header_request_id = X-Request-ID

{% if 'statsd' in parts['auctions.ini'] %}
[filter:request_metrics]
paste.filter_factory = pyramidtiming.tween:factory
{% endif %}

[loggers]
keys = root, openprocurement.auction, restkit.client

[handlers]
keys = console{% if 'statsd' in parts['auctions.ini'] %},statsd {% endif %}

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = console{% if 'statsd' in parts['auctions.ini'] %},statsd {% endif %}

[logger_restkit.client]
level = ERROR
handlers =
qualname = restkit.client

[logger_openprocurement.auction]
level = DEBUG
handlers =
qualname = openprocurement.auction

{% if 'statsd' in parts['auctions.ini'] %}
[handler_statsd]
level = DEBUG
class = statsdhandler.StatsdHandler
args = ("{{handler_config}}",)
{% endif %}

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = INFO
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s
